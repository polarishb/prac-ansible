---
- name: Install Kubernetes
  hosts: k8s-all
  remote_user: root
  tasks:
    - name: Add kubernetes repository
      blockinfile:
        path: /etc/yum.repos.d/kubernetes.repo
        block: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch
          enabled=1
          gpgcheck=1
          gpgkey=https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
          exclude=kubelet kubeadm kubectl
        create: true

    - name: Update repository
      yum:
        name:
          - epel-release
          - yum-utils
        state: present
    - name: Install Kubernetes Packages
      yum:
        name:
          - kubeadm
          - kubectl
          - kubelet
        state: present
        disable_excludes: kubernetes

    - name: Enable Services
      systemd:
        name: kubelet
        state: started
        enabled: yes

    - name: Add entries to .bashrc
      lineinfile:
        path: ~/.bashrc
        line: "{{ item }}"
        insertafter: EOF
      with_items:
        - 'source <(kubectl completion bash)'
        - 'alias k=kubectl'
        - 'complete -o default -F __start_kubectl k'

    - name: Source .bashrc
      command: source ~/.bashrc
      failed_when: false


    - name: Create .kube directory 
      file:
        path: ~/.kube
        state: directory
        mode: '0644'

    - name: Add Container Runtime repository
      command: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      args:
       creates: /etc/yum.repos.d/docker-ce.repo

    - name: Install Container Runtime Packages
      yum:
        name: containerd.io
        state: present
        disable_excludes: kubernetes
        allowerasing: true

    - name: Create containerd directory
      file:
        path: /etc/containerd
        state: directory
        mode: '0644'      

    - name: Configure containerd default setting
      command: containerd config default > /etc/containerd/config.toml

    - name: Read File Contents
      slurp:
        path: /etc/containerd/config.toml
      register: file_content

    - name: Find Specific String
      set_fact:
        specific_line: "{{ file_content.content | b64decode | regex_search('default_runtime.options].*$', multiline=True) }}"

    - name: Set Cgroup to Systemd
      replace:
        path: /etc/containerd/config.toml
        regexp: "{{ specific_line }}"
        replace: "{{ specific_line }}\n          SystemdCgroup = true"
      when: specific_line is defined
      
    - name: Enable Services
      systemd:
        name: containerd
        state: started
        enabled: yes